ПРОГРАММА РАБОТАЕТ НА 64-БИТНЫХ СИСТЕМАХ!!!

На данный момент программа работает с текстовыми файлами.

Программа реализует алгоритм RC5 с размером блока 128 бит, 30 раундами, и длиной ключа 16 байт.

В программе используются только стандартные библиотеки:
<stdio.h> 	для работы с файлами и ввода / вывода.
<stdlib.h>	для работы с динамической паматью.

В программе используются следующие функции:

------------------------------------------
size_t ror(size_t, size_t);
Описание:
Функция выполняет циклический сдвиг битов числа вправо.
Аргументы:
Функция ror принимает два параметра типа size_t.
Первый аргумент - число, биты которого мы хотим сдвинуть.
Второй аргумент - на сколько позиций мы хотим сдвинуть биты в числе.
Возвращаемое значение:
Функция возвращает число, полученное после сдвига битов первого аргумента функции.

------------------------------------------
size_t rol(size_t, size_t);
Описание:
Функция выполняет циклический сдвиг битов числа влево.
Аргументы:
Функция ror принимает два параметра типа size_t.
Первый аргумент - число, биты которого мы хотим сдвинуть.
Второй аргумент - на сколько позиций мы хотим сдвинуть биты в числе.
Возвращаемое значение:
Функция возвращает число, полученное после сдвига битов первого аргумента функции.

------------------------------------------
size_t bytestoint64(unsigned char*, size_t);

Описание:
Функция переводит число из битового представления в числовое.
Аргументы:
Функция принимает один аргумент типа unsigned char* и один аргумент типа size_t.
Первый аргумент - указатель на данные типа unsigned char, которые представляют байтовое представление числа типа size_t.
Второй аргумент - позиция в массиве, с которой мы хотим начать чтение.
Возвращаемое значение:
Функция возвращает число, полученное в результате преобразования массива байтов в число.

------------------------------------------
void int64tobytes(size_t, unsigned char*, size_t);

Описание:
Функция переводит число типа size_t в байтовое представление.
Аргументы:
Функция принимает аргументы типа size_t, unsgigned char*, size_t.
Первый аргумент - число, которое мы хотим преобразовать.
Второй аргумент - буфер, в который мы записываем байтовое представление числа.
Третий аргумент - позиция в буфере, с которой мы хотим начать запись.
Возвращаемое значение:
Нет возвращаемого значения.

------------------------------------------
size_t int64max(size_t, size_t);
Описание:
Функция возвращает максимум из двух чисел типа size_t.

------------------------------------------
unsigned char *makekey(size_t);
Описание:
Функция создаёт ключ заданного размера
Аргументы:
Функция принимает один аргумент типа size_t - размер создаваемого ключа.
Возвращаемое значение:
Функция возвращает ключ в виде строки(массива unsigned char).

------------------------------------------
size_t *maketables(unsigned char*);
Описание:
Функция создаёт массив расширенных ключей, необходимый для работы алгоритма шифрования.
Аргументы:
Функция принимает один аргумент типа unsigned char* - ключ
Возвращаемое значение:
Функция возвращает указатель на size_t - массив расширенных ключей.

------------------------------------------
void encode(unsigned char*, unsigned char*, size_t*);
Описание:
Функция производит кодирование блока данных размера 16 байт.
Аргументы:
Функция принимает аргументы типа unsigned char*, unsigned char*, size_t*.
Первый аргумент - блок данных для кодирования
Второй аргумент - блок для закодированных данных
Третий аргумент - массив расширенных ключей
Возвращаемое значение:
Нет возвращаемого значения.

------------------------------------------
void decode(unsigned char*, unsigned char*, size_t*);
Описание:
Функция производит декодирование блока данных размера 16 байт.
Аргументы:
Функция принимает аргументы типа unsigned char*, unsigned char*, size_t*.
Первый аргумент - блок данных для декодирования
Второй аргумент - блок для декодированных данных
Третий аргумент - массив расширенных ключей
Возвращаемое значение:
Нет возвращаемого значения.

------------------------------------------
void encodefile(unsigned char*);
Описание:
Функция производит кодирование файла input.txt в файл output.txt.
Файл input.txt должен существовать в папке с проектом, иначе выполнение кода прервётся.
Аргументы:
Функция принимет один аргумент типа unsigned char* - ключ.
Возвращаемое значение:
Нет возвращаемого значения.

------------------------------------------
void decodefile(unsigned char*);
Описание:
Функция производит кодирование файла output.txt в файл decodedoutput.txt.
Файл output.txt должен существовать, иначе выполнение кода прервётся.
Аргументы:
Функция принимет один аргумент типа unsigned char* - ключ
Возвращаемое значение:
Нет возвращаемого значения.
